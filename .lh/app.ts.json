{
    "sourceFile": "app.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1642500185400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1642500196623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \n import { opine } from \"https://deno.land/x/opine@2.1.1/mod.ts\";\n import { TrailService } from \"./TrailService.ts\";\n import trails from \"./db.ts\";\n-import removeUndefined from \".helpers/removeUndefined.ts\";\n+import removeUndefined from \"./helpers/removeUndefined.ts\";\n \n const port = 3000;\n \n const app = opine();\n"
                },
                {
                    "date": 1642500359075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,9 @@\n     let searchQuery = trailService.findACoolTrail({ \n         trailId: req.query.trailid, \n         length: req.query.length, \n         title: req.query.title, \n+        rating: req.query.rating,\n         coordinates: req.query.coordinates });\n     searchQuery = removeUndefined(searchQuery);\n     console.log(searchQuery);\n     res.send(await trails.find({}, {noCursorTimeout: false }).toArray());\n"
                },
                {
                    "date": 1642579062747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,15 +19,15 @@\n });\n \n app.get(\"/search\", async function (req, res) {\n     const trailService = new TrailService();\n-    let searchQuery = trailService.findACoolTrail({ \n+    let searchParameters = trailService.findACoolTrail({ \n         trailId: req.query.trailid, \n         length: req.query.length, \n         title: req.query.title, \n         rating: req.query.rating,\n         coordinates: req.query.coordinates });\n-    searchQuery = removeUndefined(searchQuery);\n+    let searchQuery = JSON.stringify(searchParameters);\n     console.log(searchQuery);\n     res.send(await trails.find({}, {noCursorTimeout: false }).toArray());\n     /* result \n     { trailId: undefined, length: \"2500\", title: undefined, coordinates: undefined }\n"
                },
                {
                    "date": 1642579152868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n         rating: req.query.rating,\n         coordinates: req.query.coordinates });\n     let searchQuery = JSON.stringify(searchParameters);\n     console.log(searchQuery);\n-    res.send(await trails.find({}, {noCursorTimeout: false }).toArray());\n+    res.send(await trails.find({searchQuery}, {noCursorTimeout: false }).toArray());\n     /* result \n     { trailId: undefined, length: \"2500\", title: undefined, coordinates: undefined }\n     mongo doesn't accept the undefined values\n     TODO: maybe write a function to reformat the string\n"
                },
                {
                    "date": 1642579632091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n         rating: req.query.rating,\n         coordinates: req.query.coordinates });\n     let searchQuery = JSON.stringify(searchParameters);\n     console.log(searchQuery);\n-    res.send(await trails.find({searchQuery}, {noCursorTimeout: false }).toArray());\n+    res.send(await trails.find({searchQuery}, {noCursorTimeout: false }));\n     /* result \n     { trailId: undefined, length: \"2500\", title: undefined, coordinates: undefined }\n     mongo doesn't accept the undefined values\n     TODO: maybe write a function to reformat the string\n"
                },
                {
                    "date": 1642581309115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,21 +4,45 @@\n import { opine } from \"https://deno.land/x/opine@2.1.1/mod.ts\";\n import { TrailService } from \"./TrailService.ts\";\n import trails from \"./db.ts\";\n import removeUndefined from \"./helpers/removeUndefined.ts\";\n+import { Bson } from \"https://deno.land/x/bson/mod.ts\";\n \n const port = 3000;\n \n const app = opine();\n \n+app.get(\"/trailid/:trailid\", async function ({\n+    req,\n+    res,\n+}: {\n+    req: { id: string };\n+    res: any;\n+}) : Promise<void> {\n+\n+    console.log(\"Das ist req\", req);\n+    console.log(\"Das ist req.id\", req.id);\n+    const trail = await trails.find({ \"_id\": new Bson.ObjectID(req.id) }, { noCursorTimeout: false }).toArray();\n+\n+    if(trail) {\n+        res.status = 200;\n+        res.body = {\n+            success: true,\n+            data: trail,\n+        };\n+    } else {\n+        res.status = 404;\n+        res.body = {\n+            success: false,\n+            msg: \"No trail found\",\n+        };\n+    }\n+});\n+\n app.get(\"/alltrails\", async function (req, res) {\n     res.send(await trails.find({}, { noCursorTimeout: false }).toArray())\n });\n \n-app.get(\"/trailid/:trailid\", function (req, res) {\n-    res.send(`trailid lautet: ${req.params.trailid}`);\n-});\n-\n app.get(\"/search\", async function (req, res) {\n     const trailService = new TrailService();\n     let searchParameters = trailService.findACoolTrail({ \n         trailId: req.query.trailid, \n@@ -29,45 +53,62 @@\n     let searchQuery = JSON.stringify(searchParameters);\n     console.log(searchQuery);\n     res.send(await trails.find({searchQuery}, {noCursorTimeout: false }));\n     /* result \n-    { trailId: undefined, length: \"2500\", title: undefined, coordinates: undefined }\n-    mongo doesn't accept the undefined values\n-    TODO: maybe write a function to reformat the string\n+    correct string is passed, but is not correctly formatted for search in Mongo\n     */\n });\n \n-app.set(\"/addTrail\", async function addTrail({\n+app.set(\"/addTrail\", async ({\n     req, res,\n-}: {\n-    req: any;\n-    res: any;\n-}): Promise<void> {\n+  }: {\n+    req: any; res: any;\n+  }): Promise<void> => {\n     try {\n-        if (!req.hasBody) {\n-            res.status = 400;\n-            res.body = {\n-                success: false,\n-                msg: \"No Data\",\n-            };\n-        } else {\n-            const body = await req.body();\n-            const trail = await body.value;\n-            await trails.insertOne(trail);\n-            res.status = 201;\n-            res.body = {\n-                success: true,\n-                data: trail,\n-            };\n-        }\n-    } catch (err) {\n+      if(!req.hasBody) {\n+        res.status = 400;\n         res.body = {\n-            success: false,\n-            msg: err.toString(),\n+          success: false,\n+          msg: \"No Data\",\n         };\n+      } else {\n+        const body = await req.body();\n+        const trail = await body.value;\n+        await trails.insertOne(trail);\n+        res.status = 201;\n+        res.body = {\n+          success: true,\n+          data: trail,\n+        };\n+      }\n+    } catch(err) {\n+      res.body = {\n+        success: false,\n+        msg: err.toString(),\n+      };\n     }\n-});\n+  });\n \n+app.delete(\"/deleteTrail\", async function({\n+    req, res\n+  }: {\n+    req: { id: string; }; res: any;\n+  }): Promise<void> {\n+    try {\n+      await trails.deleteOne({ $oid: req.id });\n+      res.status = 201;\n+      res.body = {\n+        success: true,\n+        msg: \"Trail deleted\",\n+      };\n+    } catch(err) {\n+      res.body = {\n+        success: false,\n+        msg: err.toString(),\n+      };\n+    }\n+  });\n+\n app.listen(\n     port,\n     () => console.log(`Server has started on http://localhost:${port} ðŸš€`),\n );\n\\ No newline at end of file\n"
                }
            ],
            "date": 1642500185400,
            "name": "Commit-0",
            "content": "// to run use the following cmd\n// deno run --allow-net --allow-read --allow-env app.ts\n\nimport { opine } from \"https://deno.land/x/opine@2.1.1/mod.ts\";\nimport { TrailService } from \"./TrailService.ts\";\nimport trails from \"./db.ts\";\nimport removeUndefined from \".helpers/removeUndefined.ts\";\n\nconst port = 3000;\n\nconst app = opine();\n\napp.get(\"/alltrails\", async function (req, res) {\n    res.send(await trails.find({}, { noCursorTimeout: false }).toArray())\n});\n\napp.get(\"/trailid/:trailid\", function (req, res) {\n    res.send(`trailid lautet: ${req.params.trailid}`);\n});\n\napp.get(\"/search\", async function (req, res) {\n    const trailService = new TrailService();\n    let searchQuery = trailService.findACoolTrail({ \n        trailId: req.query.trailid, \n        length: req.query.length, \n        title: req.query.title, \n        coordinates: req.query.coordinates });\n    searchQuery = removeUndefined(searchQuery);\n    console.log(searchQuery);\n    res.send(await trails.find({}, {noCursorTimeout: false }).toArray());\n    /* result \n    { trailId: undefined, length: \"2500\", title: undefined, coordinates: undefined }\n    mongo doesn't accept the undefined values\n    TODO: maybe write a function to reformat the string\n    */\n});\n\napp.set(\"/addTrail\", async function addTrail({\n    req, res,\n}: {\n    req: any;\n    res: any;\n}): Promise<void> {\n    try {\n        if (!req.hasBody) {\n            res.status = 400;\n            res.body = {\n                success: false,\n                msg: \"No Data\",\n            };\n        } else {\n            const body = await req.body();\n            const trail = await body.value;\n            await trails.insertOne(trail);\n            res.status = 201;\n            res.body = {\n                success: true,\n                data: trail,\n            };\n        }\n    } catch (err) {\n        res.body = {\n            success: false,\n            msg: err.toString(),\n        };\n    }\n});\n\napp.listen(\n    port,\n    () => console.log(`Server has started on http://localhost:${port} ðŸš€`),\n);"
        }
    ]
}